function [side,region] = assign_region(x,y)
%ASSIGN_PLI_REGION Summary of this function goes here
%   Detailed explanation goes here
    
    % Midline:
    X = [7.96264703000000, -6.67669403200000];
    Y = [0,0];
    [slope, intercept] = polyfit(X, Y, 1);
    
    if(y == 0)
       side = 'both';
       region = 'midline';
    elseif( y > 0)
        side = 'left';
    else
        side = 'right';
    end
    % Decide here if we need to go left or right
    
    
    % LEFT


    
    % RIGHT

    
    
    
    % Decision :
    % 0) Check if you fall in y == 0, this means that you need to have side
    % == both and region == midline
    % 1) Check if we are left or right based on the y
    %   if y > 0 -> side = left, y < 0 side = right
    % 2) use the line either on the left or right side of the brain
    %   depending on where the point falls.
    % put the x inside the formula. if your y is exactly == then region ==
    % both. If you are at left and y is > then you are lateral, otherwise
    % midline.
    % 3) same for the right
end



function region = get_left_region(x,y)
    X = [6.02115996400000, 0.284948655000000, -4.49482169800000];
    Y = [4.45938718700000, 5.47913021000000, 5.83124149800000];
    [slope, intercept] = polyfit(X, Y, 1);
    
    % Check if we are part of the three points
    for i=1:length(X)
       if(x == X(i))
           region = 'both';
           return;
       end
    end
    
    %
    
end

function region = get_right_region(x,y)
    X = [6.02115996400000, 0.284948655000000, -4.49482169800000];
    Y = [-4.45938718700000, -5.47913021000000, -5.83124149800000];
    [slope, intercept] = polyfit(X, Y, 1);

    % Check if we are part of the three points
    for i=1:length(X)
       if(x == X(i))
           region = 'both';
           return;
       end
    end
end